
func (p *$obj.name.value) readField$(field.tag)(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field $(field.tag): %s", err)
	} else {
		p.$field.name.value = v
	}
	return nil
}

func (p *$obj.name.value) writeField$(field.tag)(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("$field.name.value", thrift.I32, $field.tag); err != nil {
		return fmt.Errorf("%T write field begin error $field.type:$field.name.value: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.$field.name.value)); err != nil {
		return fmt.Errorf("%T.$field.name.value ($field.type) field write error: %s", p, err)
	}

	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:ID: %s", p, err)
	}
	return err
}
